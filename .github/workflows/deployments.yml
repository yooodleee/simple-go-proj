name: Deployments example
on:
  push:
    branches: [ "main", "dev" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    
    - name: Run build
      uses: gradle/gradle-build-action@v2
      with:
        arguments: build

    - name: Check build/libs
      run:
        echo "Contents of build/libs:"
        ls -l build/libs

    - name: Find JAR file
      id: find_jar
      run: |
        JAR_PATH=$(find build/libs -type f -name "*.jar" | head -n 1)
        echo "JAR_PATH=$JAR_PATH"
        echo "JAR_PATH=$JAR_PATH" >> "$GITHUB_OUTPUT"

    - name: Check if JAR was found
      if: ${{ steps.find_jar.outputs.JAR_PATH == '' }}
      run: |
        echo: "‚ùå JAR file not found in build/libs"
        exit 1
    
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: greetings-deploy
        path: ${{ steps.find_jar.outputs.JAR_PATH }}

  deploy-dev:

    needs: [build-and-test]
    if: github.ref == 'refs/heads/dev'

    runs-on: ubuntu-latest
    environment:
      name: dev
      url: https://github.com/${{ github.repository }}/releases/tag/v${{ vars.DEV_VERSION }}

    steps:
      - name: Download candidate artifacts
        uses: actions/download-artifact@v4
        with:
          name: greetings-deploy

      - name: Check downloaded files
        run: ls -R

      - name: release to dev
        uses: softprops/action-gh-release@v0.1.15
        with:
          tag_name: v$${{ vars.DEV_VERSION }}
          token: ${{ secrets.DEV_TOKEN }}
          prerelease: true
          draft: true
          name: dev
          files: greetings-deploy/*.jar

  deploy-prod:

    needs: [build-and-test]
    if: github.ref == 'refs/heads/main'

    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://github.com/${{ github.repository }}/releases/tag/v${{ vars.PROD_VERSION }}

    steps:
      - name: Download candidate artifacts
        uses: actions/download-artifact@v4
        with:
          name: greetings-deploy

      - name: Check downloaded files
        run: ls -R
        
      - name: GH Release
        uses: softprops/action-gh-release@v0.1.15
        with:
          tag_name: ${{ vars.PROD_VERSION }}
          token: ${{ secrets.PROD_TOKEN }}
          generate_release_notes: true
          name: Production
          files: greetings-deploy/*.jar
